#!/usr/bin/env bash
[[ $1 == "-d" ]] && debug () { return 0; } || debug () { return 1; }

myHost=$(hostname)
myKeyDB=~/myKeyDB
myKeyDB=$(echo $myKeyDB)

declare -A myKeys
declare -A myHosts

workingDir=~/.ssh/
workingDir=$(echo $workingDir)

cfgFile="${workingDir}/config"

[[ ! -d $workingDir ]] && {
    echo "Cannot locate .ssh folder '${workingDir}', exiting"
    exit 1
}

cd $workingDir || {
    echo "Cannot cd to .ssh folder '${workingDir}', exiting"
    exit 3
}

# first, get basic data about all of our keys
for pubKey in *pub; do
    privKey=$(basename $pubKey .pub)
    fullDetails=$(ssh-keygen -l -f $pubKey)
    read bitLength fullFingerPrint myId algorithm <<<${fullDetails}
    algorithm=$(echo $algorithm | tr -d '()')
    IFS=: read hashType fingerPrint <<<${fullFingerPrint}
    debug && echo $fingerPrint $hashType $myId $algorithm $bitLength $privKey
    myKeys[${fingerPrint}]="$hashType:$privKey:$myId:$algorithm:$bitLength"
done

echo

debug && for key in "${!myKeys[@]}"; do
    echo ${myKeys[$key]}
done

# check out each config entry
[[ ! -f $cfgFile ]] && {
    echo There is no cfgFile on this host
}

hostLine='^Host[[:space:]]'
idenLine='^IdentityFile'
nameLine='^Hostname'
userLine='^User'
blankLine='^[[:space:]]*$'
curHost=''
curIden=''
curName=''
curUser=''
while read -r LINE; do
    [[ $LINE =~ $hostLine ]] && {
        curHost=${LINE##* }
    }
    [[ $LINE =~ $idenLine ]] && {
        curIden=$(basename ${LINE##* })
    }
    [[ $LINE =~ $userLine ]] && {
        curUser=${LINE##* }
    }
    [[ $LINE =~ $nameLine ]] && {
        curName=${LINE##* }
    }
    [[ $LINE =~ $blankLine ]] && {
        debug && echo "'$myHost:$curHost:$curIden:$curName:$curUser'"
        myHosts[${myHost}:${curHost}]="$curIden:$curName:$curUser"
    }
done < $cfgFile

for key in "${!myHosts[@]}"; do
    hostFrom=${key%:*}
    hostTo=${key#*:}
    echo $hostFrom goes to $hostTo using ${myHosts[$key]}
    #continue
    thisKey=${myHosts[$key]%%:*}
    fullDetails=$(ssh-keygen -l -f $thisKey)
    read bitLength fullFingerPrint myId algorithm <<<${fullDetails}
    algorithm=$(echo $algorithm | tr -d '()')
    IFS=: read hashType fingerPrint <<<${fullFingerPrint}
    echo -e "\t\t\tFingerprint: $fingerPrint"
    echo
done
